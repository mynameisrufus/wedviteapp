<h1><%= @stationery.name %></h1>

<style>
  .toolbox {
    position: absolute;
    right: 0;
    top: 0;
    background: rgba(0, 0, 0, 0.5);
    color: white;
    z-index: 999;
    padding: 20px;
    border: 1px solid black;
  }
</style>

<div class="actions">
  <button class="show-toolbox" data-toolbox="images">Images</button>
  <button class="show-toolbox" data-toolbox="assets">Assets</button>
  <button class="save">Save</button>
  <button class="deploy">Deploy</button>
  <%= link_to 'preview', preview_stationery_path(@stationery), target: "blank" %>
  <%= link_to 'pdf', preview_stationery_path(@stationery, format: :pdf), target: "blank" %>
</div>

<div class="toolbox" data-toolbox="images">
  <button class="close">&times;</button>
  <ul>
    <% @stationery.images.each do |image| %>
      <li><%= image.attachment_file_name %></li>
    <% end %>
  </ul>
  <%= link_to 'manage images', stationery_images_path(@stationery) %>
</div>

<div class="toolbox" data-toolbox="assets">
  <button class="close">&times;</button>
  <ul>
    <% @stationery.assets.each do |asset| %>
      <li><%= asset.attachment_file_name %></li>
    <% end %>
  </ul>
  <%= link_to 'manage assets', stationery_assets_path(@stationery) %>
</div>

<div>
  <div id="editor"><%= @stationery.html_dev %></div><div id="wording"><%= @stationery.example_wording_dev %></div>
</div>

<script>
    $toolbox = $('.toolbox')
    $toolbox.each(function(index, el) {
      $(el).find('.close').on('click', function(){
        $(el).hide()
      })
    })
    $('.show-toolbox').on('click', function(){
      $this = $(this)
      $toolbox.each(function(index, el) {
        if ($(el).data('toolbox') == $this.data('toolbox')) $(this).show()
      })
    })

    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/vibrant_ink");

    var HtmlScriptMode = require("ace/mode/html").Mode;
    editor.getSession().setMode(new HtmlScriptMode());
    editor.getSession().setUseSoftTabs(true);
    editor.getSession().setTabSize(2)

    var wordingEditor = ace.edit("wording");
    var MarkdownScriptMode = require("ace/mode/markdown").Mode;
    var LiquidScriptMode = require("ace/mode/liquid").Mode;
    //wordingEditor.getSession().setMode(new MarkdownScriptMode());
    wordingEditor.getSession().setMode(new LiquidScriptMode());
    wordingEditor.getSession().setUseSoftTabs(true);
    wordingEditor.getSession().setTabSize(2)

    var vim = require("ace/keyboard/vim").handler;
    editor.setKeyboardHandler(vim);
    wordingEditor.setKeyboardHandler(vim);

    var ajax = function(code, wording, callback, url, type) {
        $.ajax({
            type: type,
            url: url,
            data: {
                stationery: {
                    html_dev: code,
                    example_wording_dev: wording
                }
            },
            success: callback,
            error: function(data) {
              alert(JSON.parse(data.responseText).html[0])
            },
            dataType: 'json'
        })
    }

    var publish = function(code, wording, callback) {
      if (confirm('Are you sure?')) ajax(code, wording, callback, "<%= deploy_stationery_path(@stationery) %>", 'POST')
    }

    var save = function(code, wording, callback) {
      ajax(code, wording, callback, "<%= stationery_path(@stationery) %>", 'PUT')
    }

    var timeouts = {}
    var manageButton = function(selector, func, before, during, after) {
      $(selector).on('click', function(event) {
          var $button = $(this)
          $button.html(during)
          event.preventDefault()
          func(editor.getValue(), wordingEditor.getValue(), function() {
              $button.html(after)
              clearTimeout(timeouts[selector])
              timeouts[selector] = setTimeout(function() {
                  $button.html(before)
              }, 500)
          })
      })
    }

    manageButton('.actions button.save', save, 'Save', 'Saving.....', 'Saved')
    manageButton('.actions button.deploy', publish, 'Deploy', 'Deploying.....', 'Deployed')
</script>
